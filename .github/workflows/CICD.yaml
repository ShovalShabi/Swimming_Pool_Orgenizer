name: CI/CD for Node.js Backend Server Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Change to backend directory
      - name: Change working directory to backend
        run: |
          cd backend

      # Step 3: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "21"

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          cd backend
          npm install

      # Step 5: Run tests
      - name: Run tests
        run: |
          cd backend
          npm run test
        env:
          NODE_ENV: test

      # Step 6: Build the application
      - name: Build application
        run: |
          cd backend
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Change to backend directory
      - name: Change working directory to backend
        run: |
          cd backend

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Login to Docker Hub (optional, if you want to push images to Docker Hub)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERUSERNAME }}
          password: ${{ secrets.DOCKERPASSWORD }}

      # Step 5: Build and start Docker Compose services
      - name: Build and start Docker Compose services
        run: |
          cd backend
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose -f docker-compose.yml up --build -d

      # Step 6: Tear down Docker Compose after deployment
      - name: Tear Down Docker Compose
        if: always()
        run: |
          cd backend
          docker-compose -f docker-compose.yml down

      # Step 7: Output logs for all services
      - name: Output logs for all services
        run: |
          cd backend
          echo "Service logs:"
          docker-compose logs

      # Step 8: Upload log file
      - name: Upload log file
        uses: actions/upload-artifact@v3
        with:
          name: deployment-logs
          path: ./backend/logs
